=============================================
Function with no parameter and no return type
=============================================
main : () = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list)
    )
    (statement (compound_statement))
  )
)

================================================================
Function with no parameter and no return type with no equal sign
================================================================
main : () {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list)
    )
    (statement (compound_statement))
  )
)

==============================================
Function with one parameter and no return type
==============================================

fn : (x: int) = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter
          (identifier)
          (type_id (identifier))
        )
      )
    )
    (statement (compound_statement))
  )
)

===============================================
Function with two parameters and no return type
===============================================

fn : (x: int, y: int) = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter
          (identifier)
          (type_id (identifier))
        )
        (parameter
          (identifier)
          (type_id (identifier))
        )
      )
    )
    (statement (compound_statement))
  )
)

============================
Function with this parameter
============================

fn : (this) = {}

---
(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter_this)
      )
    )
    (statement (compound_statement))
  )
)

==========================================
Function with this parameter and specifier
==========================================

fn : (implicit this) = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter_this (this_specifier))
      )
    )
    (statement (compound_statement))
  )
)

==========================================
Function with this parameter and direction
==========================================

fn : (out this) = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter_this (direction))
      )
    )
    (statement (compound_statement))
  )
)

======================================================
Function with this parameter, specifier, and direction
======================================================

fn : (virtual out this) = {}

---

(translation_unit
  (declaration
    (identifier)
    (function_type
      (parameter_list
        (parameter_this (this_specifier) (direction))
      )
    )
    (statement (compound_statement))
  )
)

============================================
Function with a single statement as its body
============================================

public fn : () = a

---

(translation_unit
  (declaration
  )
)

=================================
Function with an access specifier
=================================

public fn : () {}

---

(translation_unit
  (declaration
    (access_specifier)
    (identifier)
    (function_type (parameter_list))
    (statement (compound_statement))
  )
)
